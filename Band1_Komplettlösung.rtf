{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1031{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green77\blue187;\red0\green0\blue255;}
{\*\generator Riched20 10.0.22621}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\ul\b\f0\fs36\lang7 Informatik mit Java -- Komplettl\'f6sung Band I \fs22\par
\fs28 Inhalt\ulnone\b0\fs22\par
\ul\fs24 Danksagung \ulnone\par
Danke f\'fcr das Buch  ;> \par
\ul Vorwort an Sch\'fcler \ulnone\par
Nur abschreiben ist langweilig :D ,aber kann ich verstehen macht selber trotzdem was sonst ists gefuscht.\par
\ul Vorwort an Lehrer \par
\ulnone\'d6hm,das Buch ist nicht f\'fcr sie au\'dfer sie wollen eine Musterl\'f6sung das ist cool :) .\par
\ul\b\fs28 Kapitel 1 Installation \ulnone\b0\fs22\par
\b\fs24 Reine Anleitungen lassen wir raus.\b0\par
1.1 Installation von BlueJ \par
1.2 Installation des JDK und der API-Dokumentation \par
1.3 Installation der SuM-Bibliotheken \par
1.4 Test der Installation \par
\ul\b\fs28 Kapitel 2 Klassen und Objekte \fs22\par
\ulnone\b0\fs24 2.1 Klassen und Objekte \par
2.2 Objekte erzeugen \par
2.3 Dienste aufrufen \par
>-\'dcbung 2.1\par
Die Hintergrundfarbe des erzeugten Bildschirms f\'e4rbt sich rot.\par
>-\'dcbung 2.2\par
0-12\par
0 Schwarz\par
1 Dunkelblau\par
2 T\'fcrkis \par
3 Dunkelgrau\par
4 Hellgrau\par
5 Hellgr\'fcn\par
6 Wei\'dfGrau\par
7 Pink\par
8 Senfgelb\par
9 Beige\par
10 Rot\par
11 Wei\'df\par
12 Gelb\par
>-\'dcbung 2.3\par
Ja,wenn man die gr\'f6\'dfe des Bildschirms anpasst passt sich die gr\'f6\'dfe des Bildschirms an. \par
!!EXTRA: Da sum.kern.Bildschirm ein extended JFrame ist kann man durch setResizable(false) diese Funktion einschr\'e4nken.\par
2.4 Klassendokumentationen ansehen \par
>Keine Aufgaben\par
2.5 Anfragen und Auftr\'e4ge \par
>-\'dcbung 2.4\par
Camel case ist eine Schreibweise, bei der mehrere W\'f6rter zusammen geschrieben werden und dabei der erste Buchstabe jedes Wortes au\'dfer dem ersten gro\'df geschrieben wird. Zum Beispiel: "MeinNameIstBernard". Diese Schreibweise wird h\'e4ufig in der Informatik verwendet, um Variablen- oder Funktionsnamen lesbarer zu machen und gleichzeitig den Code kompakter zu gestalten.\par
>-\'dcbung 2.5\par
\cf1 import sum.kern.*;\par
public class Hauptprogramm\par
\{\par
    Bildschirm b;\par
    Stift s;\par
    public Hauptprogramm()\par
    \{\par
        b = new Bildschirm(600,600);\par
        s = new Stift();\par
        this.fuehreAus();\par
    \}\par
>-\'dcbung 2.6\par
import sum.kern.*;\par
public class Hauptprogramm\par
\{\par
    Bildschirm b;\par
    Stift s;\par
    public Hauptprogramm()\par
    \{\par
        b = new Bildschirm(600,600);\par
        s = new Stift();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        //Dreieck\par
        s.bewegeBis(100, 100);\par
        s.runter();\par
        s.bewegeUm(100);\par
        s.dreheUm(120);\par
        s.bewegeUm(100);\par
        s.dreheUm(120);\par
        s.bewegeUm(100);\par
        s.hoch();  \par
    \}\par
\}\par
>-\'dcbung 2.7\par
In unsere fuehreAus() Funktion:\par
//Rechteck\par
        s.bewegeBis(200, 200);\par
        s.runter();\par
        s.zeichneRechteck(200, 200);\par
        s.dreheBis(315);\par
        s.bewegeUm(280);\par
        s.bewegeUm(-280);\par
        s.dreheBis(0);\par
        s.bewegeUm(200);\par
        s.dreheBis(225);\par
        s.bewegeUm(280);\par
        s.hoch();\par
\cf0 2.6 Die Punktnotation f\'fcr Dienstaufrufe \par
>Keine Aufgaben\par
2.7 Zusammenfassung \par
>Keine Aufgaben\par
\ul\b\fs28 Kapitel 3 Aufbau eines SuM-Programms \fs22\par
\ulnone\b0\fs24 3.1 Erzeugen einer Programm-Vorlage \par
Die Programm-Vorlage in Question:\par
\cf1 import sum.kern.*;\par
public class Hauptprogramm\par
\{\par
    Bildschirm b;\par
    Stift s;\par
    public Hauptprogramm()\par
    \{\par
        b = new Bildschirm(600,600);\par
        s = new Stift();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        s.bewegeBis(100, 100);\par
        s.schreibeText("Hallo Welt");\par
        \par
        s.gibFrei();\par
        b.gibFrei();\par
    \}\par
\}\par
\cf0 3.2 Programmaufbau \par
In diesem Kapitel steht man solle nicht an kommentaren sparen. Bitte folgt dieser Anweisung nicht und schreibt lieber eine richtige Dokumentation :> lange Kommentare inmitten des Codes nerven nur alle die diesen editieren m\'fcssen.\par
3.3 Programmausf\'fchrung \par
>Keine Aufgaben\par
3.4 Fehlersuche \par
>Keine Aufgaben bei denen ich helfen k\'f6nnte alles im Editor.\par
3.5 Programmgesteuertes Zeichnen \par
>\'dcbung 3.5\par
\cf1 public void fuehreAus()\par
    \{\par
        s.bewegeBis(100, 10);\par
        //Header\par
        s.schreibeText("Zeichnung gestalted von Willi Wusel");\par
        //Dreieck\par
        s.bewegeBis(10, 100);\par
        s.runter();\par
        s.bewegeUm(100);\par
        s.dreheUm(120);\par
        s.bewegeUm(100);\par
        s.dreheUm(120);\par
        s.bewegeUm(100);\par
        s.hoch();  \par
        \par
        //Rechteck\par
        s.bewegeBis(120, 11);\par
        s.runter();\par
        s.zeichneRechteck(100, 100);\par
        s.hoch();\par
\par
        //Sechseck\par
        s.bewegeBis(280, 100);\par
        s.runter();\par
        s.dreheBis(0);\par
        s.bewegeUm(50);\par
        s.dreheBis(60);\par
        s.bewegeUm(50);\par
        s.dreheBis(120);\par
        s.bewegeUm(50);\par
        s.dreheBis(180);\par
        s.bewegeUm(50);\par
        s.dreheBis(240);\par
        s.bewegeUm(50);\par
        s.dreheBis(300);\par
        s.bewegeUm(50);\par
        s.hoch();\par
        \par
        //Paragramm\par
        s.bewegeBis(10, 200);\par
        s.runter();\par
        s.dreheBis(0);\par
        s.bewegeUm(50);\par
        s.dreheUm(135);\par
        s.bewegeUm(50);\par
        s.dreheUm(135);\par
        s.bewegeUm(50);\par
        s.dreheUm(135);\par
        s.bewegeUm(50);\par
        s.dreheUm(135);\par
        s.bewegeUm(50);\par
        s.dreheUm(135);\par
        s.bewegeUm(50);\par
        s.dreheUm(135);\par
        s.bewegeUm(50);\par
        s.dreheUm(135);\par
        s.bewegeUm(50);\par
        s.hoch();\par
        \par
        //Stern\par
        s.bewegeBis(120, 200);\par
        s.runter();\par
        s.dreheBis(0);\par
        s.bewegeUm(100);\par
        s.bewegeUm(-50);\par
        s.dreheUm(45);\par
        s.bewegeUm(50);\par
        s.bewegeUm(-50);\par
        s.dreheUm(45);\par
        s.bewegeUm(50);\par
        s.bewegeUm(-50);\par
        s.dreheUm(45);\par
        s.bewegeUm(50);\par
        s.bewegeUm(-50);\par
        s.dreheUm(45);\par
        s.bewegeUm(50);\par
        s.bewegeUm(-50);\par
        s.dreheUm(45);\par
        s.bewegeUm(50);\par
        s.bewegeUm(-50);\par
        s.dreheUm(45);\par
        s.bewegeUm(50);\par
        s.bewegeUm(-50);\par
        s.dreheUm(45);\par
        s.bewegeUm(50);\par
        s.bewegeUm(-50);\par
        s.dreheUm(45);\par
        s.bewegeUm(50);\par
        s.bewegeUm(-50);\par
        s.hoch();\par
        \par
        //Kreis\par
        s.bewegeBis(300, 200);\par
        s.zeichneKreis(50);\par
        \par
        s.gibFrei();\par
        b.gibFrei();\par
    \}\par
\cf0 3.6 Zusammenfassung \par
>Keine Aufgaben :(\par
\ul\b\fs28 Kapitel 4 Kontrollstrukturen \ulnone\b0\fs22\par
\fs24 4.1 Schleife mit Ausgangsbedingung \par
>\'dcbung 4.1\par
Nur Ausprobier Aufgabe :(\par
>\'dcbung 4.2\par
\cf1 import sum.kern.*;\par
public class Freihand1\par
\{\par
    Bildschirm b;\par
    Stift s;\par
    Maus m;\par
    public Freihand1()\par
    \{\par
        b = new Bildschirm(500,500);\par
        s = new Stift();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
      s.runter();\par
      do\{\par
        s.bewegeBis(m.hPosition(), m.vPosition());\par
      \}while(!m.istGedrueckt());\par
    \}\par
\}\par
\cf0 4.2 Einseitige Verzweigung \par
>\'dcbung 4.3\par
\cf1 import sum.kern.*;\par
public class Freihand2\par
\{\par
    Bildschirm b;\par
    Stift s;\par
    Maus m;\par
    public Freihand2()\par
    \{\par
        b = new Bildschirm(500,500);\par
        s = new Stift();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
      do\{\par
          if(m.istGedrueckt())\par
          \{\par
           s.bewegeBis(m.hPosition(), m.vPosition());\par
           s.zeichneKreis(3);\par
          \}\par
      \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0 4.3 Schleife mit Eingangsbedingung \par
>\'dcbung 4.4\par
\cf1 import sum.kern.*;\par
public class Freihand3\par
\{\par
    Bildschirm b;\par
    Stift s;\par
    Maus m;\par
    public Freihand3()\par
    \{\par
        b = new Bildschirm(500,500);\par
        s = new Stift();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
      do\{\par
          while(m.istGedrueckt())\par
          \{\par
           s.bewegeBis(m.hPosition(), m.vPosition());\par
           s.zeichneKreis(3);\par
          \}\par
      \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0 4.4 Zweiseitige Verzweigung \par
>\'dcbung 4.5\par
\cf1 import sum.kern.*;\par
public class Freihand4\par
\{\par
    Bildschirm b;\par
    Stift s;\par
    Maus m;\par
    public Freihand4()\par
    \{\par
        b = new Bildschirm(500,500);\par
        s = new Stift();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
      do\{\par
          if(m.istGedrueckt())\par
          \{\par
           s.bewegeBis(m.hPosition(), m.vPosition());\par
           s.runter();\par
          \}else\{\par
            s.hoch();\par
          \}\par
      \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0 4.5 Klasse Tastatur \par
\cf1 import sum.kern.*;\par
public class Freihand5\par
\{\par
    Bildschirm b;\par
    Stift s;\par
    Maus m;\par
    Tastatur t;\par
    public Freihand5()\par
    \{\par
        b = new Bildschirm(500,500);\par
        s = new Stift();\par
        m = new Maus();\par
        t = new Tastatur();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
      do\{\par
          if(m.istGedrueckt())\par
          \{\par
           s.bewegeBis(m.hPosition(), m.vPosition());\par
           s.runter();\par
          \}else if(t.wurdeGedrueckt())\{\par
           s.radiere();   \par
          \}else\{\par
           s.hoch();\par
          \}\par
      \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0 >\'dcbung 4.7\par
Wurde in \'dcbung 4.6 bereits umgesetzt.\par
4.6 Linien zeichnen \par
>\'dcbung 4.8\par
\cf1 import sum.kern.*;\par
public class Freihand6\par
\{\par
    Bildschirm b;\par
    Stift s;\par
    Maus m;\par
    Tastatur t;\par
    public Freihand6()\par
    \{\par
        b = new Bildschirm(500,500);\par
        s = new Stift();\par
        m = new Maus();\par
        t = new Tastatur();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
      do\{\par
          while(m.istGedrueckt())\par
          \{\par
            if(m.istGedrueckt())\par
            \{\par
             s.zeichneKreis(3);\par
            \}else\{\par
             s.runter();\par
             s.bewegeBis(m.hPosition(), m.vPosition());  \par
            \}\par
          \}\par
      \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0 4.7 ist-Beziehung \par
>\'dcbung 4.9 \par
Ausprobier\'fcbung da kann ich nicht helfen.\par
>\'dcbung 4.10\par
\cf1 import sum.kern.*;\par
public class Freihand7\par
\{\par
    Bildschirm b;\par
    Buntstift s;\par
    Maus m;\par
    Tastatur t;\par
    public Freihand7()\par
    \{\par
        b = new Bildschirm(500,500);\par
        s = new Buntstift();\par
        m = new Maus();\par
        t = new Tastatur();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
      do\{\par
          if(m.istGedrueckt())\par
          \{\par
           s.bewegeBis(m.hPosition(), m.vPosition());\par
           s.runter();\par
          \}else if(t.wurdeGedrueckt())\{\par
           s.setzeFarbe(10);  \par
          \}else\{\par
           s.hoch();\par
          \}\par
      \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0 4.8 Tastaturpuffer \par
>\'dcbung 4.11\par
Hier k\'f6nnte dein Strukturdiagramm sein.\par
>\'dcbung 4.12\par
\cf1 import sum.kern.*;\par
public class Freihand7\par
\{\par
    Bildschirm b;\par
    Buntstift s;\par
    Maus m;\par
    Tastatur t;\par
    public Freihand7()\par
    \{\par
        b = new Bildschirm(500,500);\par
        s = new Buntstift();\par
        m = new Maus();\par
        t = new Tastatur();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
      do\{\par
          if(m.istGedrueckt())\par
          \{\par
           s.bewegeBis(m.hPosition(), m.vPosition());\par
           s.runter();\par
          \}else if(t.wurdeGedrueckt())\{\par
              if(t.zeichen() == 'r')\par
              \{\par
                s.setzeFarbe(Farbe.ROT);\par
              \}else\{\par
                s.setzeFarbe(Farbe.SCHWARZ);\par
                t.weiter();\par
              \}  \par
          \}else\{\par
           s.hoch();\par
          \}\par
      \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0 4.9 Mehrseitige Verzweigung \par
\cf1 import sum.kern.*;\par
public class Freihand9\par
\{\par
    Bildschirm b;\par
    Buntstift s;\par
    Maus m;\par
    Tastatur t;\par
    public Freihand9()\par
    \{\par
        b = new Bildschirm(500,500);\par
        s = new Buntstift();\par
        m = new Maus();\par
        t = new Tastatur();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
      do\{\par
          if(m.istGedrueckt())\par
          \{\par
           s.bewegeBis(m.hPosition(), m.vPosition());\par
           s.runter();\par
          \}else\{\par
           s.hoch();\par
          \}\par
          if (t.wurdeGedrueckt())\par
           \{ switch (t.zeichen())\par
            \{ case 'r': case 'R': s.setzeFarbe(Farbe.ROT); break;\par
              case 'b': case 'B': s.setzeFarbe(Farbe.BLAU); break;\par
              case 'g': case 'G': s.setzeFarbe(Farbe.GRUEN); break;\par
              //WEITERE FARBEN HIER \par
              default: s.setzeFarbe(Farbe.SCHWARZ); break;\par
            \}\par
            t.weiter();\par
           \}\par
      \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0 >\'dcbung 4.14\par
\cf1 import sum.kern.*;\par
public class Freihand9\par
\{\par
    Bildschirm b;\par
    Buntstift s;\par
    Maus m;\par
    Tastatur t;\par
    public Freihand9()\par
    \{\par
        b = new Bildschirm(500,500);\par
        s = new Buntstift();\par
        m = new Maus();\par
        t = new Tastatur();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
      do\{\par
          if(m.istGedrueckt())\par
          \{\par
           s.bewegeBis(m.hPosition(), m.vPosition());\par
           s.runter();\par
          \}else\{\par
           s.hoch();\par
          \}\par
          if (t.wurdeGedrueckt())\par
           \{ switch (t.zeichen())\par
            \{ case 'r': case 'R': s.setzeFarbe(Farbe.ROT); break;\par
              case 'b': case 'B': s.setzeFarbe(Farbe.BLAU); break;\par
              case 'g': case 'G': s.setzeFarbe(Farbe.GRUEN); break;\par
              default: s.setzeFarbe(Farbe.SCHWARZ); break;\par
            \}\par
            switch (t.zeichen())\par
            \{ case '1': s.setzeLinienBreite(10); break;\par
              case '2': s.setzeLinienBreite(20); break;\par
              case '3': s.setzeLinienBreite(30); break;\par
              case '4': s.setzeLinienBreite(40); break;\par
              case '5': s.setzeLinienBreite(50); break;\par
              case '6': s.setzeLinienBreite(60); break;\par
              case '7': s.setzeLinienBreite(70); break;\par
              case '8': s.setzeLinienBreite(80); break;\par
              case '9': s.setzeLinienBreite(90); break;\par
              default: s.setzeLinienBreite(1); break;\par
            \}\par
            t.weiter();\par
           \}\par
      \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0 4.10 Zusammenfassung \par
Keine Aufgaben \par
\ul\b\fs28 Kapitel 5 Kontrollstrukturen II \ulnone\b0\fs22\par
\fs24 5.1 Pfeil und Dartscheibe \par
>\'dcbung 5.1\par
\cf1 import sum.kern.*;\par
\par
public class Dart1\par
\{\par
    Bildschirm b;\par
    Buntstift s;\par
    Maus m;\par
    public Dart1()\par
    \{\par
        b = new Bildschirm(600,400);\par
        s = new Buntstift();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
\}\par
\par
\cf0 >\'dcbung 5.2\par
\cf1 import sum.kern.*;\par
\par
public class Dart1\par
\{\par
    Bildschirm b;\par
    Buntstift s;\par
    Maus m;\par
    public Dart1()\par
    \{\par
        b = new Bildschirm(600,400);\par
        s = new Buntstift();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
\par
    public void fuehreAus()\par
    \{\par
        //Dartscheibe zeichnen\par
        s.bewegeBis(500, 200);\par
        s.zeichneKreis(10);\par
        s.zeichneKreis(20);\par
        s.zeichneKreis(30);\par
        s.zeichneKreis(40);\par
        \par
        //Pfeil zeichnen\par
        s.bewegeBis(10, 300);\par
        s.dreheUm(45);\par
        s.runter();\par
        s.bewegeUm(30);\par
        s.zeichneKreis(3);\par
        s.hoch();\par
    \}\par
\}\par
\cf0 5.2 Fliegender Pfeil \par
>\'dcbung 5.3\line\cf1 import sum.kern.*;\par
\par
public class Dart2\par
\{\par
    Bildschirm b;\par
    Buntstift s;\par
    Maus m;\par
    public Dart2()\par
    \{\par
        b = new Bildschirm(600,400);\par
        s = new Buntstift();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
\par
    public void fuehreAus()\par
    \{\par
        //Dartscheibe zeichnen\par
        s.bewegeBis(500, 200);\par
        s.zeichneKreis(10);\par
        s.zeichneKreis(20);\par
        s.zeichneKreis(30);\par
        s.zeichneKreis(40);\par
        \par
        //Pfeil zeichnen\par
        s.bewegeBis(10, 300);\par
        s.dreheUm(12);\par
        s.runter();\par
        s.bewegeUm(30);\par
        s.zeichneKreis(3);\par
        s.hoch();\par
        \par
        //Pfeil fliegt\par
        do\{\par
         s.radiere();\par
         s.bewegeUm(-30);\par
         s.zeichneKreis(3);\par
         s.normal();\par
         s.bewegeUm(0.01);\par
         s.runter();\par
         s.bewegeUm(30);\par
         s.zeichneKreis(3);\par
         s.hoch();\par
        \}while(true);\par
    \}\par
\}\par
5.3 Pfeil f\'e4llt \par
>\'dcbung 5.4 \par
import sum.kern.*;\par
\par
public class Dart2\par
\{\par
    Bildschirm b;\par
    Buntstift s;\par
    Maus m;\par
    public Dart2()\par
    \{\par
        b = new Bildschirm(600,400);\par
        s = new Buntstift();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
\par
    public void fuehreAus()\par
    \{\par
        //Dartscheibe zeichnen\par
        s.bewegeBis(500, 200);\par
        s.zeichneKreis(10);\par
        s.zeichneKreis(20);\par
        s.zeichneKreis(30);\par
        s.zeichneKreis(40);\par
        \par
        int i;\par
         i = 0;\par
        while(!m.istGedrueckt())\par
        \{\par
         if( i <= 600)\par
         \{\par
          s.radiere();\par
          s.bewegeUm(-30);\par
          s.zeichneKreis(3);\par
          s.normal();\par
          s.bewegeBis(10, i);\par
          s.runter();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.hoch();\par
         \par
          i = i+1;\par
         \}else\{\par
          i = 0;\par
         \}\par
         \}\par
        \par
        //Pfeil fliegt\par
        do\{\par
         s.radiere();\par
         s.bewegeUm(-30);\par
         s.zeichneKreis(3);\par
         s.normal();\par
         s.bewegeUm(0.01);\par
         s.runter();\par
         s.bewegeUm(30);\par
         s.zeichneKreis(3);\par
         s.hoch();\par
        \}while(s.hPosition()<= 500);\par
    \}\par
\}\ul\b\par
\cf0\ulnone\b0 5.4 Pfeil dreht \par
>\'dcbung 5.5\par
\cf1 import sum.kern.*;\par
\par
public class Dart2\par
\{\par
    Bildschirm b;\par
    Buntstift s;\par
    Maus m;\par
    public Dart2()\par
    \{\par
        b = new Bildschirm(600,400);\par
        s = new Buntstift();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
\par
    public void fuehreAus()\par
    \{\par
        //Dartscheibe zeichnen\par
        s.bewegeBis(500, 200);\par
        s.zeichneKreis(10);\par
        s.zeichneKreis(20);\par
        s.zeichneKreis(30);\par
        s.zeichneKreis(40);\par
        \par
        int i;\par
         i = 0;\par
        while(!m.istGedrueckt())\par
        \{\par
         if( i <= 600)\par
         \{\par
          s.radiere();\par
          s.bewegeUm(-30);\par
          s.zeichneKreis(3);\par
          s.normal();\par
          s.bewegeBis(10, i);\par
          s.runter();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.hoch();\par
         \par
          i = i+1;\par
         \}else\{\par
          i = 0;\par
         \}\par
         \}\par
         while(m.istGedrueckt())\par
        \{\par
         s.dreheUm(i);\par
         s.radiere();\par
         s.bewegeUm(-30);\par
         s.zeichneKreis(3);\par
         s.normal();\par
         s.bewegeUm(0.01);\par
         s.runter();\par
         s.bewegeUm(30);\par
         s.zeichneKreis(3);\par
         s.hoch();\par
         i = i+1;\par
        \}\par
        \par
        //Pfeil fliegt\par
        do\{\par
         s.radiere();\par
         s.bewegeUm(-30);\par
         s.zeichneKreis(3);\par
         s.normal();\par
         s.bewegeUm(0.01);\par
         s.runter();\par
         s.bewegeUm(30);\par
         s.zeichneKreis(3);\par
         s.hoch();\par
        \}while(s.hPosition()<= 500);\par
    \}\par
\}\par
\cf0 5.5 Treffer! \par
>\'dcbung 5.6\par
Am ende der fuehreAus() Funktion einf\'fcgen.\par
\cf1 if(s.vPosition() == 200)\par
        \{\par
         s.bewegeBis(300, 200);\par
         s.schreibeText("GETROFFEN"); \par
        \}else\{\par
         s.bewegeBis(300, 200);\par
         s.schreibeText("DANNEBEN"); \par
        \}\par
\cf0 5.6 Wieder hoch! \par
>\'dcbung 5.7\par
Diese Funktion wurde bereits implementiert.\par
\b Das Dart Einspielerproject etwas versch\'f6nert\b0 .\par
\cf1 import sum.kern.*;\par
import sum.werkzeuge.*;\par
\par
public class Dartspiel_f\'fcr_eine_Person\par
\{\par
    Bildschirm b;\par
    Buntstift s;\par
    Maus m;\par
    Rechner r;\par
    public Dartspiel_f\'fcr_eine_Person()\par
    \{\par
        b = new Bildschirm(600,400);\par
        s = new Buntstift();\par
        m = new Maus();\par
        r = new Rechner();\par
        \par
        this.fuehreAus();\par
    \}\par
\par
    public void fuehreAus()\par
    \{\par
        //Dartscheibe zeichnen\par
        s.bewegeBis(500, r.ganzeZufallsZahl(50,b.hoehe()-50));\par
        double ScheibeVPosition = s.vPosition();\par
        \par
        for(int i=0;i<=50;i++)\par
        \{\par
           if(i<10)\{\par
             s.setzeFarbe(12);\par
            \}else if(i<20)\{\par
             s.setzeFarbe(10);\par
            \}else if(i<30)\{\par
             s.setzeFarbe(1);\par
            \}else if(i<40)\{\par
             s.setzeFarbe(0);\par
            \}else\{\par
             i = 50;\par
            \} \par
           s.zeichneKreis(i);  \par
        \}\par
        \par
        //Pfeil f\'e4llt\par
        s.bewegeBis(10, -1);\par
        while(!m.istGedrueckt())\{\par
          //Pfeil radieren\par
          s.radiere();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-30);\par
          s.normal();\par
          //Pfeil bewegen\par
          s.dreheBis(270);\par
          s.bewegeUm(1);\par
          s.dreheBis(-270);\par
          //Pfeil zeichnen\par
          s.runter();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-30);\par
          s.hoch();\par
          if(s.vPosition()>b.hoehe())\{\par
           s.bewegeBis(10, -1);   \par
          \}\par
        \}\par
        \par
        //Pfeil drehen\par
        double i = 0;  \par
        while(m.istGedrueckt())\{\par
         //Pfeil radieren\par
          s.radiere();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-30);\par
          s.normal();\par
          //Pfeil drehen\par
          s.dreheUm(i);\par
          //Pfeil zeichnen\par
          s.runter();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-30);\par
          s.hoch();\par
          \par
          i = i+0.0001;\par
        \}\par
        \par
        //Pfeil fliegt\par
        i = 0;\par
        while(s.hPosition()<500)\{\par
          //Pfeil radieren\par
          s.radiere();\par
          s.bewegeUm(40);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-40);\par
          s.normal();\par
          //Pfeil drehen\par
          s.bewegeUm(i);\par
          //Pfeil zeichnen\par
          s.runter();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-30);\par
          s.hoch();\par
          \par
          i = i+0.01;\par
        \}\par
        //Treffer?\par
        if(s.vPosition() == ScheibeVPosition)\par
        \{\par
         s.bewegeBis(300, 200);\par
         s.schreibeText("GETROFFEN"); \par
        \}else\{\par
         s.bewegeBis(300, 200);\par
         s.schreibeText("DANNEBEN"); \par
        \}\par
    \}\par
\}\par
\cf0 5.7 Zwei Spieler \par
\cf1 import sum.kern.*;\par
import sum.werkzeuge.*;\par
\par
public class Dartspiel_f\'fcr_zwei_Personen\par
\{\par
    Bildschirm b;\par
    Buntstift s;\par
    Maus m;\par
    Rechner r;\par
    Tastatur t;\par
    public Dartspiel_f\'fcr_zwei_Personen()\par
    \{\par
        b = new Bildschirm(600,400);\par
        s = new Buntstift();\par
        m = new Maus();\par
        r = new Rechner();\par
        t = new Tastatur();\par
        \par
        this.fuehreAus();\par
    \}\par
\par
    public void fuehreAus()\par
    \{\par
        //Dartscheibe zeichnen\par
        s.bewegeBis(500, r.ganzeZufallsZahl(50,b.hoehe()-50));\par
        double ScheibeVPosition = s.vPosition();\par
        \par
        for(int i=0;i<=50;i++)\par
        \{\par
           if(i<10)\{\par
             s.setzeFarbe(12);\par
            \}else if(i<20)\{\par
             s.setzeFarbe(10);\par
            \}else if(i<30)\{\par
             s.setzeFarbe(1);\par
            \}else if(i<40)\{\par
             s.setzeFarbe(0);\par
            \}else\{\par
             i = 50;\par
            \} \par
           s.zeichneKreis(i);  \par
        \}\par
        \par
        //Pfeil f\'e4llt\par
        s.bewegeBis(10, -1);\par
        while(!m.istGedrueckt())\{\par
          //Pfeil radieren\par
          s.radiere();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-30);\par
          s.normal();\par
          //Pfeil bewegen\par
          s.dreheBis(270);\par
          s.bewegeUm(1);\par
          s.dreheBis(-270);\par
          //Pfeil zeichnen\par
          s.runter();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-30);\par
          s.hoch();\par
          if(s.vPosition()>b.hoehe())\{\par
           s.bewegeBis(10, -1);   \par
          \}\par
        \}\par
        \par
        //Pfeil drehen\par
        double i = 0;  \par
        while(m.istGedrueckt())\{\par
         //Pfeil radieren\par
          s.radiere();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-30);\par
          s.normal();\par
          //Pfeil drehen\par
          s.dreheUm(i);\par
          //Pfeil zeichnen\par
          s.runter();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-30);\par
          s.hoch();\par
          \par
          i = i+0.0001;\par
        \}\par
        \par
        //Pfeil fliegt\par
        i = 0;\par
        while(s.hPosition()<500)\{\par
          //Pfeil radieren\par
          s.radiere();\par
          s.bewegeUm(40);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-40);\par
          s.normal();\par
          //Pfeil drehen\par
          if (t.wurdeGedrueckt())\par
           \{ \par
            switch (t.zeichen())\par
            \{ case 'r': case 'R': s.dreheUm(5); break;\par
              case 'l': case 'L': s.dreheUm(-5); break;\par
              \par
              default: s.dreheUm(-5); break;\par
            \}\par
           \}\par
          s.bewegeUm(i);\par
          //Pfeil zeichnen\par
          s.runter();\par
          s.bewegeUm(30);\par
          s.zeichneKreis(3);\par
          s.bewegeUm(-30);\par
          s.hoch();\par
          \par
          i = i+0.001;\par
        \}\par
        //Treffer?\par
        if(s.vPosition() == ScheibeVPosition)\par
        \{\par
         s.bewegeBis(300, 200);\par
         s.schreibeText("GETROFFEN"); \par
        \}else\{\par
         s.bewegeBis(300, 200);\par
         s.schreibeText("DANNEBEN"); \par
        \}\par
    \}\par
  \}\par
\cf0\par
5.8 Jetzt wird's bunt \par
Diese Funktion wurde schon vorher realisiert\par
5.9 Zufallszahlen \par
\'dcbung 5.11\par
Nein,einfach nein wenn ich mim buch durchbin mach ich vll nochmal eine Komplettl\'f6sung bei der ich alles verbessere und Strukturdiagramme hinzuf\'fcge.\par
Aber jz och n\'f6\'f6\par
\'dcbung 5.12\par
\cf1 import sum.werkzeuge.*;\par
import sum.kern.*;\par
\par
public class Himmel\par
\{\par
    // Objekte\par
    Bildschirm b;\par
    Stift s;\par
    Rechner r;\par
    Maus m;\par
    // Konstruktor\par
    public Himmel()\par
    \{\par
        b = new Bildschirm(600,600);\par
        s = new Stift();\par
        m = new Maus();\par
        r = new Rechner();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        while(!m.istGedrueckt())\{\par
         s.bewegeBis(r.ganzeZufallszahl(1,b.breite()), r.ganzeZufallsZahl(1,b.hoehe()));\par
         s.zeichneKreis(1);\par
        \}\par
    \}\par
\}\par
\cf0\'dcbung 5.13\par
\cf1 import sum.werkzeuge.*;\par
import sum.kern.*;\par
\par
public class Himmel\par
\{\par
    // Objekte\par
    Bildschirm b;\par
    Buntstift s;\par
    Rechner r;\par
    Maus m;\par
    // Konstruktor\par
    public Himmel()\par
    \{\par
        b = new Bildschirm(600,600);\par
        s = new Buntstift();\par
        m = new Maus();\par
        r = new Rechner();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        while(!m.istGedrueckt())\{\par
         s.bewegeBis(r.ganzeZufallszahl(1,b.breite()), r.ganzeZufallsZahl(1,b.hoehe()));\par
         s.setzeFarbe(r.ganzeZufallsZahl());\par
         s.zeichneKreis(1);\par
        \}\par
    \}\par
\}\par
\cf0\'dcbung 5.14\par
\cf1 import sum.werkzeuge.*;\par
import sum.kern.*;\par
\par
public class Linien\par
\{\par
    // Objekte\par
    Bildschirm b;\par
    Buntstift s;\par
    Rechner r;\par
    Maus m;\par
    // Konstruktor\par
    public Linien()\par
    \{\par
        b = new Bildschirm(600,600);\par
        s = new Buntstift();\par
        m = new Maus();\par
        r = new Rechner();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        while(!m.istGedrueckt())\{\par
         s.bewegeBis(r.ganzeZufallszahl(1,b.breite()), r.ganzeZufallsZahl(1,b.hoehe()));\par
         s.setzeFarbe(r.ganzeZufallsZahl());\par
         s.runter();\par
         s.setzeLinienBreite(r.ganzeZufallsZahl(0,10));\par
         s.bewegeUm(r.ganzeZufallsZahl());\par
         s.hoch();\par
        \}\par
    \}\par
\}\par
\cf0\'dcbung 5.15\par
\cf1 import sum.werkzeuge.*;\par
import sum.kern.*;\par
\par
public class Wanderer\par
\{\par
    // Objekte\par
    Bildschirm b;\par
    Buntstift s;\par
    Rechner r;\par
    Maus m;\par
    // Konstruktor\par
    public Wanderer()\par
    \{\par
        b = new Bildschirm(600,600);\par
        s = new Buntstift();\par
        m = new Maus();\par
        r = new Rechner();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        s.bewegeBis(r.ganzeZufallsZahl(0, b.breite()), r.ganzeZufallsZahl(0, b.hoehe()));\par
        do\{\par
         s.runter();\par
         s.bewegeUm(1);\par
         s.dreheUm(r.ganzeZufallsZahl(0, 360));\par
        \}while(true);\par
    \}\par
\}\par
\cf0 5.10 Schatz verstecken \par
\'dcbung 5.16\par
\cf1 import sum.werkzeuge.*;\par
import sum.kern.*;\par
\par
public class Schatz1\par
\{\par
    Bildschirm b;\par
    Buntstift schatzstift;\par
    Rechner r;\par
    \par
    public Schatz1()\par
    \{\par
        b = new Bildschirm(600,600);\par
        r = new Rechner();\par
        schatzstift = new Buntstift();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        schatzstift.bewegeBis(r.ganzeZufallsZahl(50,b.breite()-50), r.ganzeZufallsZahl(50,b.hoehe()-50));\par
        schatzstift.setzeFuellMuster(2);\par
        schatzstift.setzeFarbe(12);\par
        schatzstift.zeichneKreis(30);\par
    \}\par
\}\par
\cf0 5.11 Abstand berechnen \par
\'dcbung 5.17\par
\cf1 import sum.werkzeuge.*;\par
import sum.kern.*;\par
\par
public class Schatz1\par
\{\par
    Bildschirm b;\par
    Buntstift schatzStift;\par
    Stift schreibStift;\par
    Rechner r;\par
    Maus m;\par
    \par
    public Schatz1()\par
    \{\par
        b = new Bildschirm(600,600);\par
        r = new Rechner();\par
        schatzStift = new Buntstift();\par
        schreibStift = new Stift();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        schatzStift.bewegeBis(r.ganzeZufallsZahl(50,b.breite()-50), r.ganzeZufallsZahl(50,b.hoehe()-50));\par
        schatzStift.setzeFuellMuster(2);\par
        schatzStift.setzeFarbe(12);\par
        schatzStift.zeichneKreis(30);\par
        schreibStift.bewegeBis(10, 10);\par
        do\{\par
          schreibStift.schreibeZahl(r.wurzel(\par
          r.quadrat(m.hPosition()-\par
          schatzStift.hPosition())) +\par
          r.wurzel(r.quadrat(m.vPosition()-\par
          schatzStift.vPosition())));\par
        \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0\'dcbung 5.18\par
\cf1 import sum.werkzeuge.*;\par
import sum.kern.*;\par
\par
public class Schatz1\par
\{\par
    Bildschirm b;\par
    Buntstift schatzStift;\par
    Stift schreibStift;\par
    Rechner r;\par
    Maus m;\par
    \par
    public Schatz1()\par
    \{\par
        b = new Bildschirm(600,600);\par
        r = new Rechner();\par
        schatzStift = new Buntstift();\par
        schreibStift = new Stift();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        schatzStift.bewegeBis(r.ganzeZufallsZahl(50,b.breite()-50), r.ganzeZufallsZahl(50,b.hoehe()-50));\par
        schatzStift.setzeFuellMuster(2);\par
        schreibStift.bewegeBis(10, 10);\par
        \par
        do\{\par
        double i = \par
        r.wurzel(\par
        r.quadrat(m.hPosition()-schatzStift.hPosition())) + r.wurzel(r.quadrat(m.vPosition()-\par
        schatzStift.vPosition()));\par
        if(i < 15)\{\par
         schatzStift.setzeFarbe(12);\par
         schatzStift.zeichneKreis(30);\par
        \}\par
       \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0 5.12 Schnell suchen! \par
\'dcbung 5.19\par
\cf1 import sum.werkzeuge.*;\par
import sum.kern.*;\par
\par
public class Schatz_mit_Uhr\par
\{\par
    Bildschirm b;\par
    Buntstift schatzStift;\par
    Stift schreibStift;\par
    Rechner r;\par
    Maus m;\par
    Uhr u;\par
    \par
    public Schatz_mit_Uhr()\par
    \{\par
        b = new Bildschirm(600,600);\par
        r = new Rechner();\par
        schatzStift = new Buntstift();\par
        schreibStift = new Stift();\par
        m = new Maus();\par
        u = new Uhr();\par
        \par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{  schatzStift.bewegeBis(r.ganzeZufallsZahl(50,b.breite()-50), r.ganzeZufallsZahl(50,b.hoehe()-50));\par
        schatzStift.setzeFuellMuster(2);\par
        schreibStift.bewegeBis(10, 10);\par
        do\{\par
        double i = \par
        r.wurzel(\par
        r.quadrat(m.hPosition()-schatzStift.hPosition())) + r.wurzel(r.quadrat(m.vPosition()-\par
        schatzStift.vPosition()));\par
        if(i < 15)\{\par
         schatzStift.setzeFarbe(12);\par
         schatzStift.zeichneKreis(30);\par
        \}else if (u.verstricheneZeit() <60)\{\par
         this.fuehreAus();\par
        \}\par
       \}while(!m.doppelKlick());\par
    \}\par
\}\par
\cf0\'dcbung 5.20\par
Was soll ich hier machen Screenshots ach comon das k\'f6nnt ihr selber (wenn v1 hiervon raus ist k\'f6nnen wir \'fcber v2 reden)\par
\'dcbung 5.21\par
Struktogramm kommt in v2 :)\par
5.13 Zusammenfassung \par
Super,alles super ,aber hohlt bitte deutsche W\'f6rter aus Java . Java ist ohne sum Verst\'e4ndlicher und sch\'f6ner.\par
\ul\b\fs28 Kapitel 6 Eigene Klassen I \fs22\par
\ulnone\b0\fs24 6.1 Eigene Unterklassen erzeugen \par
\'dcbung 6.1\par
Das genutzte Hauptprogramm:\par
\cf1 import sum.kern.*;\par
\par
public class Hauptprogramm\par
\{\par
    Bildschirm b;\par
    Figurstift s;\par
    \par
    public Hauptprogramm()\par
    \{\par
        b = new Bildschirm(600,600);\par
        s = new Figurstift();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
      //Rechteck\par
      s.bewegeBis(200, 100);\par
      s.zeichneQuadrat(10);  \par
      //Ohne Fehler\par
      s.bewegeBis(100, 100);  \par
      s.zeichneRing(5, 10);\par
      //F\'fcr den Fehler  \par
      s.zeichneRing(10, 5);        \par
    \}\par
\}\par
\cf0 Der Figurstift:\par
\cf1 import sum.kern.*;\par
\par
public class Figurstift extends Stift\par
\{\par
    public Figurstift()\par
    \{\par
        super();\par
    \}\par
\par
    public void zeichneQuadrat(double pGroesse)\par
    \{\par
     this.zeichneRechteck(pGroesse,pGroesse); \par
    \}\par
    \par
    public void zeichneRing(double pInnererRing, double pAeu\'dfererRing)\par
    \{\par
     if(pAeu\'dfererRing > pInnererRing)\{   \par
      this.zeichneKreis(pInnererRing);\par
      this.zeichneKreis(pAeu\'dfererRing);\par
     \}else\par
     \{\par
      System.out.println("Fehler! Innerer Ring muss gr\'f6\'dfer als aeu\'dferer Ring sein.");  \par
     \}\par
    \}\par
\}\par
\cf0\'dcbung 6.2\par
Das verwendete Hauptprogramm:\par
\cf1 import sum.kern.*;\par
\par
public class Hauptprogramm\par
\{\par
    Bildschirm b;\par
    Planstift s;\par
    Tastatur t;\par
    Maus m;\par
    public Hauptprogramm()\par
    \{\par
        b = new Bildschirm(600,600);\par
        s = new Planstift();\par
        t = new Tastatur();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        do\{\par
          s.bewegeBis(m.hPosition(), m.vPosition());  \par
          if (t.wurdeGedrueckt())\par
           \{ switch (t.zeichen())\par
            \{ case 'w': case 'W': s.zeichneWand(); break;\par
              case 'f': case 'F': s.zeichneFenster(); break;\par
              case 't': case 'T': s.zeichneTuer(); break;\par
              case 'l': case 'L': s.zeichneEckeLinks(); break;\par
              case 'r': case 'R': s.zeichneEckeRechts(); break;\par
              default: s.zeichneWand(); break;\par
            \}\par
            t.weiter(); \par
           \}\par
        \}while (true); \par
    \}\par
\}\par
\cf0 Der Planstift:\par
\cf1 import sum.kern.*;\par
\par
public class Planstift extends Stift\par
\{\par
    public Planstift()\par
    \{\par
        super();\par
    \}\par
    public void zeichneWand()\par
    \{\par
     this.runter();\par
     this.bewegeUm(30); \par
     this.hoch();\par
     this.dreheBis(90);\par
     this.bewegeUm(6);\par
     this.runter();\par
     this.bewegeUm(-30);\par
     this.hoch();\par
    \}\par
    public void zeichneFenster()\par
    \{\par
     this.dreheBis(-90);\par
     this.runter();\par
     this.bewegeUm(6);\par
     this.bewegeUm(-3);\par
     this.dreheBis(0);\par
     this.bewegeUm(30);\par
     this.dreheBis(-90);\par
     this.bewegeUm(-3);\par
     this.bewegeUm(6);\par
     this.hoch();\par
    \}\par
    public void zeichneTuer()\par
    \{\par
     this.dreheBis(-90);\par
     this.runter();\par
     this.bewegeUm(6);\par
     this.bewegeUm(-3);\par
     this.dreheBis(30);\par
     this.bewegeUm(30);\par
     this.bewegeUm(-30);\par
     this.dreheBis(0);\par
     this.hoch();\par
     this.bewegeUm(30);\par
     this.runter();\par
     this.dreheBis(-90);\par
     this.bewegeUm(-3);\par
     this.bewegeUm(6); \par
     this.hoch();\par
    \}\par
    public void zeichneEckeLinks()\par
    \{\par
     this.runter();\par
     this.bewegeUm(6);\par
     this.dreheBis(90);\par
     this.bewegeUm(6);\par
     this.hoch();\par
    \}\par
    public void zeichneEckeRechts()\par
    \{\par
     this.runter();\par
     this.bewegeUm(6);\par
     this.dreheBis(-90);\par
     this.bewegeUm(6);\par
     this.hoch();\par
    \}\par
\}\par
\cf0 6.2 Klassendiagramm \par
\'dcbung 6.3\par
\cf1 import sum.kern.*;\par
\par
public class Kugel\par
\{\par
    //Bezugsobjecte\par
    //Attribute\par
    //Konstruktor\par
    public Kugel()\par
    \{ \par
    \}\par
    //Dienste\par
    public void gibfrei()\par
    \{\par
    \}\par
    public void zeichne()\par
    \{\par
    \}\par
    public void bewege()\par
    \{\par
    \}\par
\}\par
\cf0\'dcbung 6.4\par
Ich entschuldige mich an der Stelle,allerdings habe ich keine Ahnung was diese Aufgabe von mir Verlangt.\par
6.3 hat-Beziehung \par
\'dcbung 6.5\par
K\'fcrzer,grade Objektorientiertes programmieren kann sehr gro\'dfwerden deswegen alles verk\'fcrzen.\par
Und doppelter Code ist meist unn\'f6tig.\par
\'dcbung 6.6\par
Das genutzte Hauptprogramm:\par
\cf1 import sum.kern.*;\par
\par
public class Hauptprogramm\par
\{\par
    Bildschirm b;\par
    Kugel k;\par
    Maus m;\par
    public Hauptprogramm()\par
    \{\par
        b = new Bildschirm(600,600);\par
        k = new Kugel();\par
        m = new Maus();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        while(!m.istGedrueckt())\par
        \{\par
         k.bewege();   \par
        \}\par
    \}\par
\}\cf0\par
Kugel:\par
\cf1 import sum.kern.*;\par
\par
public class Kugel\par
\{\par
    //Bezugsobjecte\par
    Stift s;\par
    //Attribute\par
    //Konstruktor\par
    public Kugel()\par
    \{ \par
     s = new Stift(); \par
    \}\par
    //Dienste\par
    public void gibfrei()\par
    \{\par
     s.gibFrei();\par
    \}\par
    public void zeichne()\par
    \{\par
     s.zeichneKreis(5);  \par
    \}\par
    public void bewege()\par
    \{\par
     s.bewegeUm(0.1);\par
     this.zeichne();\par
    \}\par
\}\par
\cf0 Was die Frage meint ich hab keine Ahnung sorry :(\par
\'dcbung 6.7\par
Hier die modifizierte Kugel:\par
\cf1 import sum.kern.*;\par
\par
public class Kugel\par
\{\par
    //Bezugsobjecte\par
    Stift s;\par
    //Attribute\par
    //Konstruktor\par
    public Kugel()\par
    \{ \par
     s = new Stift(); \par
    \}\par
    //Dienste\par
    public void gibfrei()\par
    \{\par
     s.gibFrei();\par
    \}\par
    public void zeichne()\par
    \{\par
     s.zeichneKreis(5);  \par
    \}\par
    public void loesche()\par
    \{\par
     s.radiere();\par
     s.zeichneKreis(5);  \par
     s.normal();\par
    \}\par
    public void bewege()\par
    \{\par
     this.loesche();   \par
     s.bewegeUm(0.1);\par
     this.zeichne();\par
    \}\par
\}\par
\cf0 6.4 Beziehungsdiagramm \par
\'dcbung 6.8\par
Das genuzte Hauptprogramm:\par
\cf1 import sum.kern.*;\par
\par
public class Hauptprogramm\par
\{\par
    Bildschirm b;\par
    Kugel k;\par
    Maus m;\par
    Stift s;\par
    public Hauptprogramm()\par
    \{\par
        b = new Bildschirm(600,600);\par
        k = new Kugel(100,100);\par
        m = new Maus();\par
        s = new Stift();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        s.bewegeBis(10, 10);\par
        s.zeichneRechteck(570, 570);\par
        \par
        while(!m.istGedrueckt())\par
        \{\par
         k.bewege();   \par
         if(k.hPosition() > 570)\par
         \{\par
          k.setzeRichtung(-180);  \par
         \}\par
         if(k.hPosition() < 16)\par
         \{\par
          k.setzeRichtung(0); \par
         \}\par
         if(k.vPosition() > 570)\par
         \{\par
          k.setzeRichtung(90);  \par
         \}\par
         if(k.vPosition() < 16)\par
         \{\par
          k.setzeRichtung(-90); \par
         \}\par
        \}\par
    \}\par
\}\par
\cf0\par
Die genutzte Kugel:\par
\par
\cf1 import sum.kern.*;\par
\par
public class Kugel\par
\{\par
    //Bezugsobjecte\par
    Stift s;\par
    //Attribute\par
    //Konstruktor\par
    public Kugel(double pH,double pV)\par
    \{ \par
     s = new Stift(); \par
     s.bewegeBis(pH, pV);\par
    \}\par
    //Dienste\par
    public void gibfrei()\par
    \{\par
     s.gibFrei();\par
    \}\par
    public void zeichne()\par
    \{\par
     s.zeichneKreis(5);  \par
    \}\par
    public void loesche()\par
    \{\par
     s.radiere();\par
     s.zeichneKreis(5);  \par
     s.normal();\par
    \}\par
    public void bewege()\par
    \{\par
     this.loesche();   \par
     s.bewegeUm(0.1);\par
     this.zeichne();\par
    \}\par
    public double hPosition()\par
    \{\par
     return s.hPosition();\par
    \}\par
    public double vPosition()\par
    \{\par
     return s.vPosition();\par
    \}\par
    public void setzeRichtung(double pRichtung)\par
    \{\par
     s.dreheBis(pRichtung);   \par
    \}\par
\}\par
\cf0\'dcbung 6.9:\par
Das genuzte Hauptprogramm:\par
\cf1 import sum.kern.*;\par
\par
public class Hauptprogramm\par
\{\par
    Bildschirm b;\par
    Kugel k;\par
    Maus m;\par
    Stift s;\par
    public Hauptprogramm()\par
    \{\par
        b = new Bildschirm(600,600);\par
        k = new Kugel(100,100);\par
        m = new Maus();\par
        s = new Stift();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        s.bewegeBis(10, 10);\par
        s.zeichneRechteck(570, 570);\par
        \par
        while(!m.istGedrueckt())\par
        \{\par
         k.bewege(); \par
        \}\par
    \}\par
\}\par
\cf0 Die Verwendete Kugel:\par
\cf1 import sum.kern.*;\par
\par
public class Kugel\par
\{\par
    //Bezugsobjecte\par
    Stift s;\par
    //Attribute\par
    //Konstruktor\par
    public Kugel(double pH,double pV)\par
    \{ \par
     s = new Stift(); \par
     s.bewegeBis(pH, pV);\par
    \}\par
    //Dienste\par
    public void gibfrei()\par
    \{\par
     s.gibFrei();\par
    \}\par
    public void zeichne()\par
    \{\par
     s.zeichneKreis(5);  \par
    \}\par
    public void loesche()\par
    \{\par
     s.radiere();\par
     s.zeichneKreis(5);  \par
     s.normal();\par
    \}\par
    private boolean amLinkenRand()\par
    \{ \par
         return this.hPosition() < 16;\par
    \}\par
    private boolean amRechtenRand()\par
    \{\par
         return this.hPosition() > 570;\par
    \}\par
    public void bewege()\par
    \{\par
     this.loesche();   \par
     s.bewegeUm(0.1);\par
     this.zeichne();\par
     if(amRechtenRand()== true)\par
     \{\par
      this.setzeRichtung(-180);  \par
     \}\par
     if(amLinkenRand() == true)\par
     \{\par
      this.setzeRichtung(0); \par
     \}\par
    \}\par
    public double hPosition()\par
    \{\par
     return s.hPosition();\par
    \}\par
    public double vPosition()\par
    \{\par
     return s.vPosition();\par
    \}\par
    public void setzeRichtung(double pRichtung)\par
    \{\par
     s.dreheBis(pRichtung);   \par
    \}\par
\}\cf0\par
6.5 Attribute \par
\'dcbung 6.10\par
Die modifizierte Kugel:\par
\cf1 import sum.kern.*;\par
\par
public class Kugel\par
\{\par
    //Bezugsobjecte\par
    Stift s;\par
    //Attribute\par
    private int zGroesse;\par
    private double zGeschwindigkeit;\par
    //Konstruktor\par
    public Kugel(double pH,double pV,int pGroesse,double pGeschwindigkeit)\par
    \{ \par
     s = new Stift(); \par
     s.bewegeBis(pH, pV);\par
     zGroesse = pGroesse;\par
     zGeschwindigkeit = pGeschwindigkeit;\par
    \}\par
    //Dienste\par
    public void gibfrei()\par
    \{\par
     s.gibFrei();\par
    \}\par
    public void zeichne()\par
    \{\par
     s.zeichneKreis(zGroesse);  \par
    \}\par
    public void loesche()\par
    \{\par
     s.radiere();\par
     s.zeichneKreis(5);  \par
     s.normal();\par
    \}\par
    private boolean amLinkenRand()\par
    \{ \par
         return this.hPosition() < 16;\par
    \}\par
    private boolean amRechtenRand()\par
    \{\par
         return this.hPosition() > 570;\par
    \}\par
    public void bewege()\par
    \{\par
     this.loesche();   \par
     s.bewegeUm(zGeschwindigkeit);\par
     this.zeichne();\par
     if(amRechtenRand()== true)\par
     \{\par
      this.setzeRichtung(-180);  \par
     \}\par
     if(amLinkenRand() == true)\par
     \{\par
      this.setzeRichtung(0); \par
     \}\par
    \}\par
    public double hPosition()\par
    \{\par
     return s.hPosition();\par
    \}\par
    public double vPosition()\par
    \{\par
     return s.vPosition();\par
    \}\par
    public void setzeRichtung(double pRichtung)\par
    \{\par
     s.dreheBis(pRichtung);   \par
    \}\par
\}\par
\cf0\par
\'dcbung 6.11\par
Das verwendete Hauptprogramm:\par
\cf1 import sum.kern.*;\par
\par
public class Hauptprogramm\par
\{\par
    Bildschirm b;\par
    Kugel k1,k2,k3;\par
    Maus m;\par
    Stift s;\par
    public Hauptprogramm()\par
    \{\par
        b = new Bildschirm(600,600);\par
        k1 = new Kugel(100,100,5,0.1);\par
        k2 = new Kugel(150,150,7,0.2);\par
        k3 = new Kugel(170,170,10,0.3);\par
        m = new Maus();\par
        s = new Stift();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        s.bewegeBis(10, 10);\par
        s.zeichneRechteck(570, 570);\par
        \par
        while(!m.istGedrueckt())\par
        \{\par
         k1.bewege(); \par
         k2.bewege();\par
         k3.bewege();\par
        \}\par
    \}\par
\}\par
\cf0 Die verbesserte Kugel:\par
\par
\cf1 import sum.kern.*;\par
\par
public class Kugel\par
\{\par
    //Bezugsobjecte\par
    Stift s;\par
    //Attribute\par
    private int zGroesse;\par
    private double zGeschwindigkeit;\par
    //Konstruktor\par
    public Kugel(double pH,double pV,int pGroesse,double pGeschwindigkeit)\par
    \{ \par
     s = new Stift(); \par
     s.bewegeBis(pH, pV);\par
     zGroesse = pGroesse;\par
     zGeschwindigkeit = pGeschwindigkeit;\par
    \}\par
    //Dienste\par
    public void gibfrei()\par
    \{\par
     s.gibFrei();\par
    \}\par
    public void zeichne()\par
    \{\par
     s.zeichneKreis(zGroesse);  \par
    \}\par
    public void loesche()\par
    \{\par
     s.radiere();\par
     s.zeichneKreis(zGroesse);  \par
     s.normal();\par
    \}\par
    private boolean amLinkenRand()\par
    \{ \par
         return this.hPosition() < 11 + zGroesse;\par
    \}\par
    private boolean amRechtenRand()\par
    \{\par
         return this.hPosition() > 570 - zGroesse;\par
    \}\par
    public void bewege()\par
    \{\par
     this.loesche();   \par
     s.bewegeUm(zGeschwindigkeit);\par
     this.zeichne();\par
     if(amRechtenRand()== true)\par
     \{\par
      this.setzeRichtung(-180);  \par
     \}\par
     if(amLinkenRand() == true)\par
     \{\par
      this.setzeRichtung(0); \par
     \}\par
    \}\par
    public double hPosition()\par
    \{\par
     return s.hPosition();\par
    \}\par
    public double vPosition()\par
    \{\par
     return s.vPosition();\par
    \}\par
    public void setzeRichtung(double pRichtung)\par
    \{\par
     s.dreheBis(pRichtung);   \par
    \}\par
\}\par
\cf0\'dcbung 6.12\par
Das verwendete Hauptprogramm:\par
\par
\cf1 import sum.kern.*;\par
\par
public class Kugel\par
\{\par
    //Bezugsobjecte\par
    Stift s;\par
    //Attribute\par
    private int zGroesse , zRichtung;\par
    private double zGeschwindigkeit;\par
    //Konstruktor\par
    public Kugel(double pH,double pV,int pGroesse,double pGeschwindigkeit, int pRichtung)\par
    \{ \par
     s = new Stift(); \par
     s.bewegeBis(pH, pV);\par
     zGroesse = pGroesse;\par
     zGeschwindigkeit = pGeschwindigkeit;\par
     zRichtung = pRichtung;\par
     s.dreheBis(pRichtung);\par
    \}\par
    //Dienste\par
    public void gibfrei()\par
    \{\par
     s.gibFrei();\par
    \}\par
    public void zeichne()\par
    \{\par
     s.zeichneKreis(zGroesse);  \par
    \}\par
    public void loesche()\par
    \{\par
     s.radiere();\par
     s.zeichneKreis(zGroesse);  \par
     s.normal();\par
    \}\par
    private boolean amLinkenRand()\par
    \{ \par
         return this.hPosition() < 11 + zGroesse;\par
    \}\par
    private boolean amRechtenRand()\par
    \{\par
         return this.hPosition() > 570 - zGroesse;\par
    \}\par
    private boolean amOberenRand()\par
    \{ \par
         return this.vPosition() < 11 + zGroesse;\par
    \}\par
    private boolean amUnterenRand()\par
    \{\par
         return this.vPosition() > 570 - zGroesse;\par
    \}\par
    public void bewege()\par
    \{\par
     this.loesche();   \par
     s.bewegeUm(zGeschwindigkeit);\par
     this.zeichne();\par
     \par
     if(this.amLinkenRand()||this.amRechtenRand())\par
     \{\par
         s.dreheBis(180 - s.winkel());\par
     \}else if(this.amOberenRand()||this.amUnterenRand())\par
     \{\par
         s.dreheBis(360 - s.winkel());\par
     \}\par
    \}\par
    public double hPosition()\par
    \{\par
     return s.hPosition();\par
    \}\par
    public double vPosition()\par
    \{\par
     return s.vPosition();\par
    \}\par
    public void setzeRichtung(double pRichtung)\par
    \{\par
     s.dreheBis(pRichtung);   \par
    \}\par
\}\par
\cf0 Das verwendete Hauptprogramm:\par
\cf1 import sum.kern.*;\par
\par
public class Hauptprogramm\par
\{\par
    Bildschirm b;\par
    Kugel k1,k2,k3;\par
    Maus m;\par
    Stift s;\par
    public Hauptprogramm()\par
    \{\par
        b = new Bildschirm(600,600);\par
        k1 = new Kugel(100,100,5,0.1,10);\par
        k2 = new Kugel(150,150,7,0.2,30);\par
        k3 = new Kugel(170,170,10,0.3,70);\par
        m = new Maus();\par
        s = new Stift();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        s.bewegeBis(10, 10);\par
        s.zeichneRechteck(570, 570);\par
        \par
        while(!m.istGedrueckt())\par
        \{\par
         k1.bewege(); \par
         k2.bewege();\par
         k3.bewege();\par
        \}\par
    \}\par
\}\par
\cf0 6.6 kennt-Beziehung \par
\'dcbung 6.14\par
Das genutzte Hauptprogramm:\par
\par
\cf1 import sum.kern.*;\par
\par
public class Kugel\par
\{\par
    //Bezugsobjecte\par
    Stift s;\par
    Bildschirm zBildschirm;\par
    //Attribute\par
    private int zGroesse , zRichtung;\par
    private double zGeschwindigkeit;\par
    //Konstruktor\par
    public Kugel(double pH,double pV,int pGroesse,double pGeschwindigkeit, int pRichtung,Bildschirm kenntBildschirm)\par
    \{ \par
     s = new Stift(); \par
     s.bewegeBis(pH, pV);\par
     zGroesse = pGroesse;\par
     zGeschwindigkeit = pGeschwindigkeit;\par
     zRichtung = pRichtung;\par
     zBildschirm = kenntBildschirm;\par
     s.dreheBis(pRichtung);\par
    \}\par
    //Dienste\par
    public void gibfrei()\par
    \{\par
     s.gibFrei();\par
    \}\par
    public void zeichne()\par
    \{\par
     s.zeichneKreis(zGroesse);  \par
    \}\par
    public void loesche()\par
    \{\par
     s.radiere();\par
     s.zeichneKreis(zGroesse);  \par
     s.normal();\par
    \}\par
    private boolean amLinkenRand()\par
    \{ \par
         return this.hPosition() < 0 + zGroesse;\par
    \}\par
    private boolean amRechtenRand()\par
    \{\par
         return this.hPosition() > zBildschirm.breite() - zGroesse;\par
    \}\par
    private boolean amOberenRand()\par
    \{ \par
         return this.vPosition() < 0 + zGroesse;\par
    \}\par
    private boolean amUnterenRand()\par
    \{\par
         return this.vPosition() > zBildschirm.hoehe() - zGroesse;\par
    \}\par
    public void bewege()\par
    \{\par
     this.loesche();   \par
     s.bewegeUm(zGeschwindigkeit);\par
     this.zeichne();\par
     if(this.amLinkenRand()||this.amRechtenRand())\par
     \{\par
         s.dreheBis(180 - s.winkel());\par
     \}else if(this.amOberenRand()||this.amUnterenRand())\par
     \{\par
         s.dreheBis(360 - s.winkel());\par
     \}\par
    \}\par
    public double hPosition()\par
    \{\par
     return s.hPosition();\par
    \}\par
    public double vPosition()\par
    \{\par
     return s.vPosition();\par
    \}\par
    public void setzeRichtung(double pRichtung)\par
    \{\par
     s.dreheBis(pRichtung);   \par
    \}\par
\}\par
\cf0\par
Die genutzte Kugel:\par
\par
\cf1 import sum.kern.*;\par
\par
public class Kugel\par
\{\par
    //Bezugsobjecte\par
    Stift s;\par
    Bildschirm zBildschirm;\par
    //Attribute\par
    private int zGroesse , zRichtung;\par
    private double zGeschwindigkeit;\par
    //Konstruktor\par
    public Kugel(double pH,double pV,int pGroesse,double pGeschwindigkeit, int pRichtung,Bildschirm kenntBildschirm)\par
    \{ \par
     s = new Stift(); \par
     s.bewegeBis(pH, pV);\par
     zGroesse = pGroesse;\par
     zGeschwindigkeit = pGeschwindigkeit;\par
     zRichtung = pRichtung;\par
     zBildschirm = kenntBildschirm;\par
     s.dreheBis(pRichtung);\par
    \}\par
    //Dienste\par
    public void gibfrei()\par
    \{\par
     s.gibFrei();\par
    \}\par
    public void zeichne()\par
    \{\par
     s.zeichneKreis(zGroesse);  \par
    \}\par
    public void loesche()\par
    \{\par
     s.radiere();\par
     s.zeichneKreis(zGroesse);  \par
     s.normal();\par
    \}\par
    private boolean amLinkenRand()\par
    \{ \par
         return this.hPosition() < 0 + zGroesse;\par
    \}\par
    private boolean amRechtenRand()\par
    \{\par
         return this.hPosition() > zBildschirm.breite() - zGroesse;\par
    \}\par
    private boolean amOberenRand()\par
    \{ \par
         return this.vPosition() < 0 + zGroesse;\par
    \}\par
    private boolean amUnterenRand()\par
    \{\par
         return this.vPosition() > zBildschirm.hoehe() - zGroesse;\par
    \}\par
    public void bewege()\par
    \{\par
     this.loesche();   \par
     s.bewegeUm(zGeschwindigkeit);\par
     this.zeichne();\par
     if(this.amLinkenRand()||this.amRechtenRand())\par
     \{\par
         s.dreheBis(180 - s.winkel());\par
     \}else if(this.amOberenRand()||this.amUnterenRand())\par
     \{\par
         s.dreheBis(360 - s.winkel());\par
     \}\par
    \}\par
    public double hPosition()\par
    \{\par
     return s.hPosition();\par
    \}\par
    public double vPosition()\par
    \{\par
     return s.vPosition();\par
    \}\par
    public void setzeRichtung(double pRichtung)\par
    \{\par
     s.dreheBis(pRichtung);   \par
    \}\par
\}\par
\cf0 6.7 ist-Beziehung \par
\'dcbung 6.15\par
Die Reibungskugel:\par
\cf1 import sum.kern.*;\par
\par
public class Reibungskugel extends Kugel\par
\{\par
    //Bezugsobjecte\par
    //Attribute\par
        private double zGeschwindigkeit;\par
    //Konstruktor\par
    public Reibungskugel(int pH, int pV, int pGroesse,double pGeschwindigkeit, int pRichtung, Bildschirm kenntBildschirm)\par
    \{ \par
     super(pH, pV, pGroesse, pGeschwindigkeit, pRichtung,kenntBildschirm);\par
    \}\par
    public void setzeGeschwindigkeit(double i)\par
    \{\par
     zGeschwindigkeit  = zGeschwindigkeit * i;\par
    \}\par
    private void bremse()\par
    \{ \par
     this.setzeGeschwindigkeit(0.99);\par
    \}\par
     public void bewege()\par
    \{ \par
     this.bremse();\par
     super.bewege();\par
    \}\par
\}\par
\cf0\'dcbung 6.16\par
Das Hauptprogramm:\par
\cf1 import sum.kern.*;\par
\par
public class Hauptprogramm\par
\{\par
    Bildschirm b;\par
    Farbkugel k1;\par
    Maus m;\par
    Stift s;\par
    public Hauptprogramm()\par
    \{\par
        b = new Bildschirm(600,600);\par
        k1 = new Farbkugel(100,100,5,0.2,30,b,10);\par
        m = new Maus();\par
        s = new Stift();\par
        this.fuehreAus();\par
    \}\par
    public void fuehreAus()\par
    \{\par
        while(!m.istGedrueckt())\par
        \{\par
         k1.bewege();\par
        \}\par
    \}\par
\}\par
\cf0 Die Farbkugel:\par
\cf1 import sum.kern.*;\par
\par
public class Farbkugel extends Kugel\par
\{\par
   // Bezugsobjekte\par
     private Buntstift b;\par
   // Attribute\par
     private int zFarbe;\par
     double zGroesse;\par
   //Konstruktor\par
    public Farbkugel(int pH,int pV,int pGroesse,double pGeschwindigkeit,int pRichtung,Bildschirm pBildschirm, int pFarbe)\par
   \{ \par
    super(pH,pV,pGroesse,pGeschwindigkeit, pRichtung,pBildschirm);\par
    b = new Buntstift();\par
    b.bewegeBis(pH, pV);\par
    b.setzeFuellmuster(Muster.GEFUELLT);\par
    b.setzeFarbe(pFarbe);\par
    zGroesse = pGroesse;\par
   \}\par
   public void zeichne()\par
   \{ \par
    b.bewegeBis(this.hPosition(), this.vPosition());\par
    b.zeichneKreis(zGroesse);\par
   \}\par
   public void loesche()\par
   \{ \par
    b.radiere();\par
    this.zeichne();\par
    b.normal();\par
   \}\par
\}\par
\cf0\'dcbung 6.17\par
Spurkugel:\par
\cf1 import sum.kern.*;\par
\par
public class Spurkugel extends Kugel\par
\{\par
    //Bezugsobjecte\par
    //Attribute\par
    private double zGeschwindigkeit;\par
    private int zGroesse;\par
    //Konstruktor\par
    public Spurkugel(int pH,int pV,int pGroesse,double pGeschwindigkeit,int pRichtung,Bildschirm kenntBildschirm)\par
    \{ \par
     super(pH, pV, pGroesse, pGeschwindigkeit, pRichtung,kenntBildschirm);\par
     zGroesse = pGroesse;\par
    \}\par
    public void loesche()\par
    \{\par
    \}\par
     public void bewege()\par
    \{ \par
     super.bewege();\par
    \}\par
\}\par
\cf0 Zahlkugel:\par
Pulsierkugel:\par
Ich habs versucht ich hab aber noch keine Ahnung warums grad nicht funktioniert ich werds sp\'e4ter nochmal versuchen.\par
\'dcbung 6.18\par
Nein\par
\'dcbung 6.19\par
Gleiches Problem ka bin anscheinend kein Leistungstarker sch\'fcler mehr \par
na im sorry ich muss mir die sum.kern library nochmal angucken ich bin damit noch nicht so gut :(\par
6.8 Zusammenfassung \par
Keine Aufgaben\par
\ul\b\fs28 Kapitel 7 Eigene Klassen II \ulnone\b0\fs22\par
\fs24 7.1 Zufallsweg \par
\'dcbung 7.1\par
Hauptprogramm:\par
\cf1 import sum.kern.*;\par
\par
public class Hauptprogramm\par
\{\par
    // Objekte\par
    Bildschirm b;\par
    Wolf w;\par
    \par
    // Konstruktor\par
    public Hauptprogramm()\par
    \{\par
     b = new Bildschirm(600,600);\par
     w = new Wolf(b);  \par
     this.fuehreAus();\par
    \}\par
    // Dienste\par
    public void fuehreAus()\par
    \{ \par
        do\{\par
          w.bewege();\par
        \}while(true);\par
    \}\par
\}\par
\cf0 Normales Programm:\par
\cf1 import sum.werkzeuge.*;\par
import sum.kern.*;\par
\par
public class Wolf\par
\{\par
    // Objekte\par
    Stift s;\par
    Bildschirm zBildschirm;\par
    Rechner r;\par
    // Konstruktor\par
    public Wolf(Bildschirm pBildschirm)\par
    \{\par
     s = new Stift();\par
     r = new Rechner();\par
     zBildschirm = pBildschirm;\par
     s.bewegeBis(100, 100);\par
     s.runter();\par
    \}\par
\par
    // Dienste\par
    private boolean amLinkenRand()\par
    \{ \par
         return s.hPosition() < 0;\par
    \}\par
    private boolean amRechtenRand()\par
    \{\par
         return s.hPosition() > zBildschirm.breite();\par
    \}\par
    private boolean amOberenRand()\par
    \{ \par
         return s.vPosition() < 0;\par
    \}\par
    private boolean amUnterenRand()\par
    \{\par
         return s.vPosition() > zBildschirm.hoehe();\par
    \}\par
    public void bewege()\par
    \{\par
     s.bewegeUm(1);\par
     if(this.amLinkenRand()||this.amRechtenRand())\par
     \{\par
         s.dreheBis(180 - s.winkel());\par
     \}else if(this.amOberenRand()||this.amUnterenRand())\par
     \{\par
         s.dreheBis(360 - s.winkel());\par
     \}else\{\par
        s.dreheUm(r.ganzeZufallsZahl(-90, 90));\par
     \}\par
     \}\par
    \}\par
\cf0 Ver\'e4ndrete Schrittl\'e4nge und Winkelintervall:\par
\cf1 import sum.kern.*;\par
import sum.werkzeuge.*;\par
\par
public class Wolf\par
\{\par
    // Objekte\par
    Stift s;\par
    Bildschirm zBildschirm;\par
    Rechner r;\par
    // Konstruktor\par
    public Wolf(Bildschirm pBildschirm)\par
    \{\par
     s = new Stift();\par
     r = new Rechner();\par
     zBildschirm = pBildschirm;\par
     s.bewegeBis(100, 100);\par
     s.runter();\par
    \}\par
\par
    // Dienste\par
    private boolean amLinkenRand()\par
    \{ \par
         return s.hPosition() < 0;\par
    \}\par
    private boolean amRechtenRand()\par
    \{\par
         return s.hPosition() > zBildschirm.breite();\par
    \}\par
    private boolean amOberenRand()\par
    \{ \par
         return s.vPosition() < 0;\par
    \}\par
    private boolean amUnterenRand()\par
    \{\par
         return s.vPosition() > zBildschirm.hoehe();\par
    \}\par
    public void bewege()\par
    \{\par
     s.bewegeUm(0.1);\par
     if(this.amLinkenRand()||this.amRechtenRand())\par
     \{\par
         s.dreheBis(180 - s.winkel());\par
     \}else if(this.amOberenRand()||this.amUnterenRand())\par
     \{\par
         s.dreheBis(360 - s.winkel());\par
     \}else\{\par
        s.dreheUm(r.ganzeZufallsZahl(0, 360));\par
     \}\par
    \}\par
    \}\par
\cf0 7.2 Weg zum Ziel \par
\'dcbung 7.2\par
\'dcbung 7.3\par
ICH WERD VERR\'dcCKT, Sorry erg\'e4nzung ich bin.\par
Im Folgenden finden sich fehler ich wei\'df net warum wird aber verbessert.\par
Das falsche Hauptprogramm:\par
\cf1 import sum.kern.*;\par
\par
public class Hauptprogramm\par
\{\par
    // Objekte\par
    Bildschirm b;\par
    Wolf w;\par
    Rotkaepchen r;\par
    // Konstruktor\par
    public Hauptprogramm()\par
    \{\par
     b = new Bildschirm(600,600);\par
     \par
     r = new Rotkaepchen(b);\par
     w = new Wolf(b,r); \par
     this.fuehreAus();\par
    \}\par
    // Dienste\par
    public void fuehreAus()\par
    \{ \par
        do\{\par
          w.bewege();\par
        \}while(true);\par
    \}\par
\}\par
\cf0 Der fehlerhafte Wolf:\par
\cf1 import sum.kern.*;\par
import sum.werkzeuge.*;\par
\par
public class Wolf\par
\{\par
    // Objekte\par
    Stift s;\par
    Bildschirm zBildschirm;\par
    Rotkaepchen zRotkaepchen;\par
    Rechner r;\par
    public double zAbstand = 0;\par
    // Konstruktor\par
    public Wolf(Bildschirm pBildschirm,Rotkaepchen pRotkaepchen)\par
    \{\par
     s = new Stift();\par
     r = new Rechner();\par
     zBildschirm = pBildschirm;\par
     zRotkaepchen = pRotkaepchen;\par
    \par
     zAbstand = this.abstand();\par
     \par
     s.bewegeBis(100, 100);\par
     s.runter();\par
    \}\par
    // Dienste\par
    private double abstand()\par
    \{ \par
        double xR = zRotkaepchen.hPosition(); \par
        double xW = s.hPosition();\par
        double yR = zRotkaepchen.vPosition();\par
        double yW = s.vPosition();\par
        \par
        return xR*yR + xW*yW;\par
    \}\par
    private boolean amLinkenRand()\par
    \{ \par
         return s.hPosition() < 0;\par
    \}\par
    private boolean amRechtenRand()\par
    \{\par
         return s.hPosition() > zBildschirm.breite();\par
    \}\par
    private boolean amOberenRand()\par
    \{ \par
         return s.vPosition() < 0;\par
    \}\par
    private boolean amUnterenRand()\par
    \{\par
         return s.vPosition() > zBildschirm.hoehe();\par
    \}\par
    public void bewege()\par
    \{\par
     s.bewegeUm(1);\par
     if(this.amLinkenRand()||this.amRechtenRand())\par
     \{\par
         s.dreheBis(180 - s.winkel());\par
     \}else if(this.amOberenRand()||this.amUnterenRand())\par
     \{\par
         s.dreheBis(360 - s.winkel());\par
     \}else\{\par
        s.dreheUm(r.ganzeZufallsZahl( 360,0));\par
     \}\par
     if(this.abstand() > zAbstand)\par
     \{\par
         s.dreheUm(90);\par
         zAbstand = this.abstand();\par
     \}\par
     \par
     \}\par
    \}\par
\cf0 Das fehlerhafte Rotk\'e4pchen:\par
\par
\cf1 import sum.kern.*;\par
import sum.werkzeuge.*;\par
public class Rotkaepchen\par
\{\par
    // Objekte\par
    Bildschirm zBildschirm;\par
    Buntstift s;\par
    Rechner r;\par
    \par
    // Konstruktor\par
    public Rotkaepchen(Bildschirm pBildschirm)\par
    \{\par
        zBildschirm = pBildschirm;\par
        s = new Buntstift();\par
        r = new Rechner();\par
        \par
        s.bewegeBis(r.ganzeZufallsZahl(0, zBildschirm.breite()),r.ganzeZufallsZahl(0, zBildschirm.hoehe()));\par
        s.zeichneKreis(10);\par
        s.setzeFuellMuster(2);\par
        s.zeichneKreis(10);\par
    \}\par
    \par
    public double hPosition()\par
    \{ \par
        return s.hPosition();\par
    \}\par
    public double vPosition()\par
    \{ \par
        return s.vPosition();\par
    \}\par
\}\par
\cf0 7.3 Intelligenz? \par
\'dcbung 7.4\par
\'dcbung 7.5\par
\'dcbung 7.6\par
DAS HIER FIXEN WENN WOLF RICHTIG IST !!!!!!\par
7.4 Minigolf \par
7.5 Treffen! \par
7.6 Zusammenfassung \par
\ul\b\fs28 Kapitel 8 Abstrakte Klassen I \ulnone\b0\fs22\par
\fs24 8.1 Substantiv-Verb-Methode \par
8.2 Dynamische Referenz \par
8.3 Generalisierung \par
8.4 Sp\'e4te Bindung \par
8.5 Sichtbarkeit \par
8.6 Erweiterungen \par
8.7 Zusammenfassung \par
\ul\b\fs28 Kapitel 9 Abstrakte Klassen II \ulnone\b0\fs22\par
\fs24 9.1 Entwurf \par
9.2 Lokale Variable \par
9.3 Verkettung \par
9.4 Zusammenfassung \fs22\par
\ul\b\fs28 Kapitel 10 Ereignisorientierung \par
\ulnone\b0\fs24 10.1 Anwendung \par
10.2 Problemzerlegung \par
10.3 Ereignisanwendung \par
10.4 Leerlaufereignis \par
10.5 Freihandzeichnen ereignisorientiert \par
10.6 Hauptprogramm \par
10.7 Zusammenfassung \par
\ul\b\fs28 Kapitel 11 Ereignisbearbeiter \ulnone\b0\fs22\par
\fs24 11.1 Kn\'f6pfe \par
11.2 Aktionen \par
11.3 Ereignisbearbeiter \par
11.4 Ereignisverteiler \par
11.5 Debugger \par
11.6 Sichtbarkeit von Komponenten \par
11.7 Zusammenfassung \par
\ul\b\fs28 Kapitel 12 Phasen eines Softwareprojekts \ulnone\b0\par
\fs24 12.1 Phasenmodell \par
12.2 Pflichtenheft \par
12.3 Entwurfsphase \par
12.4 Implementierung \par
12.5 Modultest \par
12.6 Zusammenbau der Module \par
12.7 Ereignisbibliothek \par
12.8 Zusammenfassung \par
\ul\b\fs28 Kapitel 13 Model View Controller \ulnone\b0\fs22\par
\fs24 13.1 Bildschirmmaske \par
13.2 SuM-Programmgenerator \par
13.3 Datenmodellierung \par
13.4 Programmsteuerung \par
13.5 Applets \par
\fs22 13.6 MVC-Modell \par
13.7 Zusammenfassung \par
\ul\b\fs28 Anhang \ulnone\b0\fs22\par
Die besten Sachen die man w\'e4rend des Informatikunterricht machen kann wenn alle Sachen erledigt sind:\par
1.Anderen helfen\par
2.Sein eigenes Projekt erweitern\par
3.Nette gespr\'e4che mit anderen fertigen Sch\'fclern f\'fchren \par
4.Auf den folgenen Seiten spiele spielen:\par
- {{\field{\*\fldinst{HYPERLINK https://neal.fun/ }}{\fldrslt{https://neal.fun/\ul0\cf0}}}}\f0\fs22\par
- {{\field{\*\fldinst{HYPERLINK https://www.newgrounds.com/ }}{\fldrslt{https://www.newgrounds.com/\ul0\cf0}}}}\f0\fs22\par
oder f\'fcr Leute mit weniger Anspruch:\par
- {{\field{\*\fldinst{HYPERLINK https://www.spiele-kostenlos-online.de/ }}{\fldrslt{https://www.spiele-kostenlos-online.de/\ul0\cf0}}}}\f0\fs22\par
- {{\field{\*\fldinst{HYPERLINK https://www.spielaffe.de/ }}{\fldrslt{https://www.spielaffe.de/\ul0\cf0}}}}\f0\fs22\par
}
 